<?php

/**
 * @file
 * Implements visitor profile creating functionality
 * V.Charinas
 */

    require dirname(__FILE__) . '/visitor_profile.tracker.inc';
/**
 * Implements hook_init().
 */
    
function visitor_profile_init() {
    // loading GEO IP API preconfigured with third party module

 drupal_load('module', 'geoip'); // loading the geoip module
 global $base_url; 
 //global $cookie_domain;
 $cookie_domain = ($_SERVER['HTTP_HOST'] != 'localhost') ? $_SERVER['HTTP_HOST'] : false;
 $cookie_name = 'ns_website';
 $cookie_value_ip = geoip_ip_address();
 $cookie_path =  $base_url.'/'.current_path();
 //dpm($cookie_path);
 //cookie set for the visitor identification in case dinamic ip is changed 
 if (!isset($_COOKIE[$cookie_name])) { 
 setcookie($cookie_name, $cookie_value_ip, time() + 31556926, $cookie_path, $cookie_domain); // 31556926 = 1 year;
 }
 //setcookie($cookie_name, $cookie_value_ip, time() + 31556926, $cookie_path, $cookie_domain, false); // 31556926 = 1 year;
 
 drupal_set_message (t('Boot fired.. '.$_COOKIE["ns_website"]), 'sucsess');

}

   

    

/**
*  Implements hook_theme().
*/
    function visitor_profile_theme($existing, $type, $theme, $path) {
        $theme = array();
        $theme['poll_results'] = array(
          'render element' => 'content',
          'base hook' => 'poll',
          'template' => 'poll-results--visitor-profile',
          'path' => drupal_get_path('module', 'visitor_profile') . '/templates',
         );
        return $theme;
      }

 /**
  * Implements hook_form_alter().
  */
 function visitor_profile_form_alter (&$form, &$form_state, $form_id) {
            //dpm($form_id);//get the form_id
        
            //hook the poll form
        if ($form_id == 'poll_view_voting') {

                $form['vote']['#submit'] = array('visitor_profile_submit_handler','poll_vote');
                return $form;

    }
 }

 function visitor_profile_submit_handler() {

    drupal_set_message(t("WE are in! here we'll' create the profile for the voited visitor"));
    
 }

/**
 *  personal question form for poll
 *  @ingroup forms
 *  
 */

function visitor_profile_personal_form($form, &$form_state, $nid){
    $form_state['cache'] = TRUE;
    // Store the nid so we can get to it in submit functions.
    $form['#nid'] = $nid;
    //load node to fetch field
    $node = node_load($nid);
    
    //build our form
   

  
    $form['title'] = $node->field_personal_question[LANGUAGE_NONE] [0] ['value'];
    $form['answer'] = array (
        '#type' => 'textfield',
        '#title' => t('Your Answer'),

    );
    $form['actions'] = array('#type' => 'actions');
    $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit your answer'),
    '#submit' => array('visitor_profile_personal_question_submit_handler')
  );
  dpm($form);
  return $form;
}



function visitor_profile_personal_question_submit_handler() {

    drupal_set_message(t('yehh for fucks sake'));
    drupal_set_message(t('You entered %input', array('%input' => $form_state['values']['answer'])));

}


/*
 *  Preprocess Poll results adding personal question if it wass set
 * 
 *  Why it's not working fucking  FUUUUUCK!!!!
 */


// function visitor_profile_preprocess_poll_results(&$variables) {

//     $variables['personal_form'] = array();
//     $elements = drupal_get_form('visitor_profile_personal_form', $variables['nid']);
//     $variables['persinal_form'] = drupal_render($elements);
   
//        // $elements = drupal_get_form('visitor_profile_personal_form', $variables['nid']);
//        // $variables['personal_question_form'] = drupal_render($elements);
//         //dpm($elements);


// }
