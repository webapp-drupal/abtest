<?php

/**
 * @file
 * Implements A/B Testing for the node bundle Blogs when checked to Engage the test (checkbox). And Fields for testing headlines are filled in
 * 
 * V.Charinas
 * 
 * # BEFORE TESTS #
 *  
 *    Create fields for the default Article content type machine name Blogs
 *      1. field type bolean field_ab_test
 *      2. field type text   field_headline_a
 *      3. field type text   field_headline_a
 *    probably needs to be implemented in .install file - this is posible upgrade
 * 
 *  #  MODULE FUNCTIONALITY  #
 * 
 *    module depends on A/B test module 
 *    name = "A/B test (core)
 *    description = An A/B testing API for creating tests quickly in code. 
 *    ---------------------------------------------------------------------
 *   # IN MODULE #
 *
 *    
 *
 *    WE do call all nodes in required conditions by EntityFieldQuery 
 *    with checking all required conditions
 *    before performing any tests and checking does it have to be tested and required information is entered 
 *    it is filtred by query but to test fields are not empty will be extra care and helpfull ! Headline A and Headline B not empty !
 * 
 *    1 geting nodes in a loop we are fetching title and url of the filtered Node
 *    2 setting the test id for each node required testing
 *    3 run test
 *    4 collect results and modify url to provide GA access to results
 *    5 display results for node in node tab no additional permissions required
 *    6 display page with all tests results performed on admin accessable page (requires permission view results page)
 * 
 * 
 *  Searching for the nodes with the engaged A/B test on it and gets all required fields
  * /
  * getting the required fields to be used in the test
 */
 
/**
  *     Implements hook_menu() for the results
  */

  function abtest_headlines_menu() {
// Akshit Do i do it in right way? 
    $items = array();
    $items['abtest_headlines'] = array(
        'title' => 'A/B test Results 2',
        'description' => 'Demonstrates A/B Test Results.',
        'access callback' => TRUE,
        'page callback' => 'abtest_headlines_results_page',
        
      );

      return $items;

  }

  /*
   *  Implements hook_query_alter()
   * 
   */
  function abtest_headlines_query_alter () {
    if ($query->hasTag('efq_debug') && module_exists('devel')) {
      dpm((string)$query);
       dpm($query->arguments());
    }

    }

  /**
   *  Getting nodes with required conditions
   */

   function abtest_headlines_results_page () {
    
    // Akshit Do i do it in right way?    
    $query = new EntityFieldQuery;
    $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'blogs')
    ->propertyCondition('status', 1)
    ->fieldCondition('field_ab_test_boolean', 'value', 1, '=')
    ->fieldCondition('field_headline_a', 'value', NULL, '!=')
    ->fieldCondition('field_headline_b', 'value', NULL, '!=')
    //->addTag('efq_debug')
    ->execute();
    
    $output = [];
    if (!empty($result['node'])) {
      $output['nodes'] = node_view_multiple(node_load_multiple(array_keys($result['node'])), 'teaser');
      $output['pager']['#markup'] = theme('pager', $query->pager);
    }
  
    else {
            $output['status']['#markup'] = t('No results were returned.');
        }
  return $output;
  }
    
    
  //   $nodes = entity_load('node', array_keys($result['node']));

  //   return node_view_multiple($nodes, 'teaser'); // how do i display or use nodes to edit and change the title for the nodes in query

   
   
  // }
  
 /**
  * Generates A/B test for the Node 
  */

 
//  function abtest_headlines_node() {

//     $output = '';
//     $output .= 'Test fired';
//     // test variations in core WOW  SOLUTION 
//     if (abtest('abtest_headlines')){

//         //Variation Headline A

//     }
//     else{

//         //Variation Headline B


//     }

//     return $output;

//  }


 /**
  *  Implements page results callback
  */

//   function abtest_headlines_results_page() {

//     return '<p>' . t('Hurry! You converted.') . '</p>';
    
// }

  