<?php

/**
 * @file
 * Implements A/B Testing for the node bundle Blogs when checked to Engage the test (checkbox). And Fields for testing headlines are filled in
 * 
 * V.Charinas
 * 
 * # BEFORE TESTS #
 *  
 *    Create fields for the default Article content type machine name Blogs
 *      1. field type bolean field_ab_test
 *      2. field type text   field_headline_a
 *      3. field type text   field_headline_a
 *    probably needs to be implemented in .install file - this is posible upgrade
 * 
 *  #  MODULE FUNCTIONALITY  #
 * 
 *    module depends on A/B test module 
 *    name = "A/B test (core)
 *    description = An A/B testing API for creating tests quickly in code. 
 *    ---------------------------------------------------------------------
 *   # IN MODULE #
 *
 *    
 *
 *    WE do call all nodes in required conditions by EntityFieldQuery 
 *    with checking all required conditions
 *    before performing any tests and checking does it have to be tested and required information is entered 
 *    it is filtred by query but to test fields are not empty will be extra care and helpfull ! Headline A and Headline B not empty !
 * 
 *    1 geting nodes in a loop we are fetching title and url of the filtered Node
 *    2 set the test id for each node required testing
 *    3 run test
 *    4 collect results and modify url to provide GA access to results
 *    5 display results for node in node tab no additional permissions required
 *    6 display page with all tests results performed on admin accessable page (requires permission view results page)
 * 
 * 
 *  Searching for the nodes with the engaged A/B test on it and gets all required fields
  * /
  * getting the required fields to be used in the test
 */
 
/**
  *     Implements hook_menu() for the results
  */

  function abtest_headlines_menu() {
      // Menus
    $items = array();
    $items['node/%node/abtest-headlines'] = array(
        'title' => 'A/B Test Results',
        'description' => 'Demonstrates A/B Test Results.',
        'access callback' => TRUE,//'_abtest_headlines_menu_access',
        'page callback' => 'abtest_headlines_results_node_tab',
        //'page callback' => '_abtest_headlines_menu_access',
        'type' =>  MENU_LOCAL_TASK,
        'weight' => 10,
        
      );

    $items ['admin/reports/abtests-dashboard'] = array(

        'title' => 'A/B Tests Report',
        'description' => 'Admin pannel for multiple tests results',
        'access callback' => TRUE,
        'page callback' => 'abtest_headlines_admin_dashboard',
        'type' => MENU_NORMAL_ITEM,
         

    );

      return $items;

  }


  function _abtest_headlines_menu_access () {

    $node = menu_get_object();
     
    return $node->field_ab_test_boolean[0]['value'] === 1;
    

   
    //  if ($node->field_ab_test_boolean[0]['value'] === 1) {
    //   // Get the field value
    //  return TRUE;
            
    //}
   
  }

  

  function abtest_headlines_results_node_tab() {
        //abtest_track_conversion('abtest_example');

        // need to get node id and display results off the paticular node
        $node_id = '';
        $node_title ='';
        $headingA = '';
        $headingB = '';
        $Url = '';
        $ga_tracking_path_A = "?utm_source=Home%20Page&utm_medium=website&utm_campaign=AB%20Test&utm_content=HeadlineA";
        $ga_tracking_path_B = "?utm_source=Home%20Page&utm_medium=website&utm_campaign=AB%20Test&utm_content=HeadlineB";
        $output = '';
        $output .= '<h2>'.t('Results').'</h2>';
        
        $nodes = array_keys( abtest_headlines_query_nodes()['node']); //reusing query in function
    
        foreach ($nodes as $node){
    
          $node = node_load($node);
          
          //dpr($node);
          global $base_url;
          $node_title = $node->title;
          $node_id = $node->nid;
          $headingA = $node->field_headline_a[LANGUAGE_NONE] [0] ['value']; // string to be removed
          $headingB = $node->field_headline_b[LANGUAGE_NONE] [0] ['value']; // string to be removed
          $Url = url(drupal_get_path_alias('node/' . $node->nid), array('absolute' => TRUE));
          
          
          // dpr ($node_id);
          // dpr($node_title);
          //$output .= '<h3>'.t('ORIGINAL TITLE: ').$node_title.'</h3>';
          // dpr($Url);
        
          //dpr ($node);
          
          //dpr($headingA);
          //dpr($headingB);
          
          //it is not real test
          if ((int)$node_id < 7) {
            //dpr ((int)$node_id);
    
            $node_title = $headingA;
            $Url = $Url.$ga_tracking_path_A;
           // dpr($node_title);
            //dpr($Url);
           
            $output .= '<h3>'.t('TITLE VARIANT A: ').$node_title.'</h3>';
            $output .= '<a href="'.$Url.'" target=_blank>'.$Url.'</a>';
          }
          else {
            //dpr ((int)$node_id);
            $node_title = $headingB;
            $Url = $Url.$ga_tracking_path_B;
            // dpr($node_title);
            // dpr($Url);

            $output .= '<h3>'.t('TITLE VARIANT B: ').$node_title.'</h3>';
            $output .= '<a href="'.$Url.'" target=_blank>'.$Url.'</a>';
          }
    
          

  }
  return $output;
}



  /*
  *  Generates conversion page for the admin 
  */
  
  function abtest_headlines_admin_dashboard () {
    //abtest_track_conversion('abtest_example');


    return  '<h2>' . t('Admin dashboard should be here.') . '</h2>';

  }
    
   
   
  // }
  
 /**
  * Generates A/B test for the Node 
  */

 
//  function abtest_headlines_node() {

//     $output = '';
//     $output .= 'Test fired';
//     // test variations in core WOW  SOLUTION 
//     if (abtest('abtest_headlines')){

//         //Variation Headline A

//     }
//     else{

//         //Variation Headline B


//     }

//     return $output;

//  }

/*
*  Implements EntityFieldQuery results
*/

function abtest_headlines_query_nodes() {

//Query the nodes    
        $query = new EntityFieldQuery;
        $result = $query
        ->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'blogs')
        ->propertyCondition('status', 1)
        ->fieldCondition('field_ab_test_boolean', 'value', 1, '=')
        ->fieldCondition('field_headline_a', 'value', '', '!=')
        ->fieldCondition('field_headline_b', 'value', '', '!=')
        ->execute();


        return $result;

}